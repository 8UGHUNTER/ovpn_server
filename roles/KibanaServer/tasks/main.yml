---
   - name: Including role OpenVPN
     include_role:
       name: OpenVPN
     vars:
       server_name: "kibana"

   - name: Identifying vpn network
     shell: ip address | grep tun0 -A2 | grep "inet " | awk '{print $2}'
     register: subnet

   - name: Including check working containers
     include_role:
       name: ServerDocker
       tasks_from: manage_copy_images
     vars:
       container_name: "kibana"

   - name: Pull kibana docker image
     shell: docker pull kibana:7.16.2

   - name: Create /setup_files directory
     file:
       state: directory
       path: ~/setup_files

   - name: Get elastic vpn ip
     shell: "sudo printenv ELASTICIP"
     delegate_to: 127.0.0.1
     register: elastic_ip

   - name: Copy install_kibana script
     template:
       src: install_kibana.j2
       dest: ~/setup_files/install_kibana
       mode: "0700"
       force: yes

   - name: Copy kibana conf file
     template:
       src: kibana.j2
       dest: ~/setup_files/kibana.yml
       mode: "0666"
       force: yes

   - name: Execute install_kibana script
     shell: ~/setup_files/install_kibana {{ subnet.stdout }}

   - name: Write KIBANAIP environment var to localhost
     shell: sed -i -e '/export KIBANAIP=/d' /etc/environment && echo "export KIBANAIP=\"{{ subnet.stdout }}\"" >> /etc/environment
     delegate_to: 127.0.0.1

