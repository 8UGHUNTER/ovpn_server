---
   - name: Installing OpenVPN client
     apt:
       pkg:
         - openvpn
       state: present

   - name: Copying .ovpn file to /etc/openvpn/client
     copy:
       src: kibana.ovpn
       dest: /etc/openvpn/client/kibana.conf

   - name: Start openvpn client
     shell: systemctl start openvpn-client@kibana

   - name: Identifying vpn network
     shell: ip address | grep tun0 -A2 | grep "inet " | awk '{print $2}'
     register: subnet

   - name: Get kibana docker container name
     shell: docker ps -a | grep "kibana" | awk '{ print $NF }'
     register: image_name

   - name: Killing container
     shell: docker kill {{ image_name.stdout }}
     ignore_errors: True
     when: image_name.stdout != ""

   - name: Removing container
     shell: docker rm {{ image_name.stdout }}
     when: image_name.stdout != ""

   - name: Include configuration vars
     include_vars:
       file: ./ELK_configuration.yml

   - name: Pull kibana docker image
     shell: docker pull kibana:7.16.2

   - name: Create /setup_files directory
     file:
       state: directory
       path: ~/setup_files

   - name: Get elastic vpn ip
     shell: "sudo printenv ELASTICIP"
     delegate_to: 127.0.0.1
     register: elastic_ip

   - name: Copy install_kibana script
     template:
       src: install_kibana.j2
       dest: ~/setup_files/install_kibana
       mode: "0700"
       force: yes

   - name: Copy kibana conf file
     template:
       src: kibana.j2
       dest: ~/setup_files/kibana.yml
       mode: "0666"
       force: yes

   - name: Execute install_kibana script
     shell: ~/setup_files/install_kibana {{ subnet.stdout }}

   - name: Write KIBANAIP environment var to localhost
     shell: sed -i -e '/export KIBANAIP=/d' /etc/environment && echo "export KIBANAIP=\"{{ subnet.stdout }}\"" >> /etc/environment
     delegate_to: 127.0.0.1

